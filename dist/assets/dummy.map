{"version":3,"sources":["vendor/ember-cli/app-prefix.js","dummy/app.js","dummy/base-ember-cli-addon/tests/modules/base-ember-cli-addon/components/dummy-component.jshint.js","dummy/base-ember-cli-addon/tests/modules/base-ember-cli-addon/index.jshint.js","dummy/components/dummy-component.js","dummy/initializers/app-version.js","dummy/initializers/export-application-global.js","dummy/router.js","dummy/templates/application.js","dummy/tests/app.jshint.js","dummy/tests/blanket-options.js","dummy/tests/blanket-options.jshint.js","dummy/tests/components/dummy-component.jshint.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/resolver.jshint.js","dummy/tests/helpers/start-app.js","dummy/tests/helpers/start-app.jshint.js","dummy/tests/router.jshint.js","dummy/tests/test-helper.js","dummy/tests/test-helper.jshint.js","dummy/tests/unit/components/dummy-component-test.js","dummy/tests/unit/components/dummy-component-test.jshint.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('dummy/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'dummy/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('dummy/base-ember-cli-addon/tests/modules/base-ember-cli-addon/components/dummy-component.jshint', function () {\n\n  'use strict';\n\n  describe('JSHint - modules/base-ember-cli-addon/components/dummy-component.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'modules/base-ember-cli-addon/components/dummy-component.js should pass jshint.').to.be.ok;\n    });\n  });\n\n});","define('dummy/base-ember-cli-addon/tests/modules/base-ember-cli-addon/index.jshint', function () {\n\n  'use strict';\n\n  describe('JSHint - modules/base-ember-cli-addon/index.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'modules/base-ember-cli-addon/index.js should pass jshint.').to.be.ok;\n    });\n  });\n\n});","define('dummy/components/dummy-component', ['exports', 'base-ember-cli-addon'], function (exports, DummyComponent) {\n\n\t'use strict';\n\n\texports['default'] = DummyComponent['default'].extend();\n\n});","define('dummy/initializers/app-version', ['exports', 'dummy/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('dummy/initializers/export-application-global', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('dummy/router', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  exports['default'] = Router.map(function () {});\n\n});","define('dummy/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.2\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 4,\n            \"column\": 0\n          }\n        }\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        dom.setAttribute(el1,\"id\",\"title\");\n        var el2 = dom.createTextNode(\"Welcome to Ember.js\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,2,2,contextualElement);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"outlet\"]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('dummy/tests/app.jshint', function () {\n\n  'use strict';\n\n  describe('JSHint - app.js', function(){\n  it('should pass jshint', function() { \n    expect(true, 'app.js should pass jshint.').to.be.ok; \n  })});\n\n});","define('dummy/tests/blanket-options', function () {\n\n    'use strict';\n\n    /*globals blanket, module */\n    var options = {\n        modulePrefix: \"base-ember-cli-addon\",\n        filter: \"//.*base-ember-cli-addon/.*/\",\n        antifilter: \"//.*(tests|template).*/\",\n        loaderExclusions: [],\n        enableCoverage: true,\n        cliOptions: {\n            reporters: [\"lcov\"],\n            autostart: true,\n            lcovOptions: {\n                outputFile: \"lcov.dat\"\n            }\n        }\n    };\n    if (typeof exports === \"undefined\") {\n        blanket.options(options);\n    } else {\n        module.exports = options;\n    }\n\n});","define('dummy/tests/blanket-options.jshint', function () {\n\n  'use strict';\n\n  describe('JSHint - blanket-options.js', function(){\n  it('should pass jshint', function() { \n    expect(true, 'blanket-options.js should pass jshint.').to.be.ok; \n  })});\n\n});","define('dummy/tests/components/dummy-component.jshint', function () {\n\n  'use strict';\n\n  describe('JSHint - components/dummy-component.js', function(){\n  it('should pass jshint', function() { \n    expect(true, 'components/dummy-component.js should pass jshint.').to.be.ok; \n  })});\n\n});","define('dummy/tests/helpers/resolver', ['exports', 'ember/resolver', 'dummy/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('dummy/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  describe('JSHint - helpers/resolver.js', function(){\n  it('should pass jshint', function() { \n    expect(true, 'helpers/resolver.js should pass jshint.').to.be.ok; \n  })});\n\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/router', 'dummy/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('dummy/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  describe('JSHint - helpers/start-app.js', function(){\n  it('should pass jshint', function() { \n    expect(true, 'helpers/start-app.js should pass jshint.').to.be.ok; \n  })});\n\n});","define('dummy/tests/router.jshint', function () {\n\n  'use strict';\n\n  describe('JSHint - router.js', function(){\n  it('should pass jshint', function() { \n    expect(true, 'router.js should pass jshint.').to.be.ok; \n  })});\n\n});","define('dummy/tests/test-helper', ['dummy/tests/helpers/resolver', 'ember-mocha'], function (resolver, ember_mocha) {\n\n\t'use strict';\n\n\tember_mocha.setResolver(resolver['default']);\n\n});","define('dummy/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  describe('JSHint - test-helper.js', function(){\n  it('should pass jshint', function() { \n    expect(true, 'test-helper.js should pass jshint.').to.be.ok; \n  })});\n\n});","define('dummy/tests/unit/components/dummy-component-test', ['chai', 'ember-mocha'], function (chai, ember_mocha) {\n\n    'use strict';\n\n    /* jshint expr:true */\n    ember_mocha.describeComponent('dummy-component', 'DummyComponentComponent', {}, function () {\n        ember_mocha.it('should render a div.', function () {\n            // creates the component instance\n            var component = this.subject();\n            chai.expect(component._state).to.equal('preRender');\n\n            // renders the component on the page\n            this.render();\n            var $component = component.$();\n            chai.expect(component._state).to.equal('inDOM');\n            chai.expect($component.prop('tagName')).to.eq('DIV');\n        });\n    });\n\n});","define('dummy/tests/unit/components/dummy-component-test.jshint', function () {\n\n  'use strict';\n\n  describe('JSHint - unit/components/dummy-component-test.js', function(){\n  it('should pass jshint', function() { \n    expect(true, 'unit/components/dummy-component-test.js should pass jshint.').to.be.ok; \n  })});\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('dummy/config/environment', ['ember'], function(Ember) {\n  var prefix = 'dummy';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"dummy/tests/test-helper\");\n} else {\n  require(\"dummy/app\")[\"default\"].create({\"LOG_ACTIVE_GENERATION\":false,\"LOG_VIEW_LOOKUPS\":false,\"rootElement\":\"#ember-testing\",\"name\":\"base-ember-cli-addon\",\"version\":\"0.0.0.1643003c\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"dummy.js"}